name: Daily Master Commits Report

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  send-slack-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate aligned commit table with PR Approvers (IST)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO=${GITHUB_REPOSITORY}
          export TZ=Asia/Kolkata
          NOW=$(date +%s)
          START_TIME=$(date -d "@$((NOW - 86400))" +%Y-%m-%dT%H:%M:%S)
          COMMIT_RANGE=$(git log --since="$START_TIME" --format="%H")

          OUTPUT_FILE=commit_log.txt
          > $OUTPUT_FILE

          printf "| %-8s | %-18s | %-25s | %-18s | %-50s |\n" "Commit" "Author" "Time (IST)" "Approver(s)" "Message" >> $OUTPUT_FILE
          printf "|%s|\n" "$(printf '--------|--------------------|---------------------------|--------------------|----------------------------------------------------')" >> $OUTPUT_FILE

          for sha in $COMMIT_RANGE; do
            AUTHOR=$(git show -s --format='%an' $sha)
            DATE=$(git show -s --date=format:'%Y-%m-%d %H:%M:%S' --format='%ad' $sha)
            MSG=$(git show -s --format='%s' $sha | cut -c1-50 | tr -d '\n\r')
            SHORT_SHA=$(echo "$sha" | cut -c1-8)

            # Try to find PR via GitHub API
            PR_JSON=$(gh api /repos/$REPO/commits/$sha/pulls --jq '.[0]')
            if [[ -n "$PR_JSON" ]]; then
              PR_NUMBER=$(echo "$PR_JSON" | jq -r '.number')
              APPROVERS=$(gh api /repos/$REPO/pulls/$PR_NUMBER/reviews \
                | jq -r '[.[] | select(.state == "APPROVED") | .user.login] | unique | join(", ")')
            else
              APPROVERS="â€”"
            fi

            printf "| %-8s | %-18s | %-25s | %-18s | %-50s |\n" "$SHORT_SHA" "$AUTHOR" "$DATE" "$APPROVERS" "$MSG"
          done >> $OUTPUT_FILE

          if [[ $(wc -l < $OUTPUT_FILE) -le 2 ]]; then
            echo "No commits in the last 24 hours." > $OUTPUT_FILE
          fi

      - name: Send Slack message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO: ${{ github.repository }}
        run: |
          COMMITS=$(cat commit_log.txt)
          MESSAGE=$(printf "*ðŸ“Œ Daily Commit Report for \`$REPO\` â†’ \`master\` branch (last 24h, IST)*\n\`\`\`\n%s\n\`\`\`" "$COMMITS")

          jq -n --arg text "$MESSAGE" '{text: $text}' \
            | curl -X POST -H 'Content-type: application/json' --data @- "$SLACK_WEBHOOK_URL"